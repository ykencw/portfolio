{"version":3,"sources":["frontend/common/images/backgroundhome.jpg","frontend/common/images sync /^/.*/.svg$","frontend/common/images/aboutmeicon.svg","frontend/common/images/contacticon.svg","frontend/common/images/homeicon.svg","frontend/common/images/menuicon.svg","frontend/common/images/projectsicon.svg","frontend/common/images/backgroundprojects.jpg","frontend/Home.js","frontend/NotFound.js","frontend/NavLink.js","frontend/NavBar.js","frontend/Projects.js","frontend/App.js","frontend/serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","map","./aboutmeicon.svg","./contacticon.svg","./homeicon.svg","./menuicon.svg","./projectsicon.svg","webpackContext","req","id","webpackContextResolve","o","e","Error","code","keys","Object","resolve","Home","react_default","a","createElement","className","style","backgroundImage","concat","require","React","Component","NotFound","Fragment","react_router_dom","to","NavLink","_ref","route","iconName","linkName","clickHandler","onClick","src","alt","NavBar","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleScroll","event","updateStickied","console","log","target","value","window","pageYOffset","state","stickied","setState","addEventListener","removeEventListener","onScroll","src_frontend_NavLink","Projects","App","react_router","exact","path","component","render","src_frontend_NavBar","Boolean","location","hostname","match","ReactDOM","src_frontend_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0JAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,oFCAxC,IAAAC,EAAA,CACAC,oBAAA,GACAC,oBAAA,GACAC,iBAAA,GACAC,iBAAA,GACAC,qBAAA,IAIA,SAAAC,EAAAC,GACA,IAAAC,EAAAC,EAAAF,GACA,OAAAT,EAAAU,GAEA,SAAAC,EAAAF,GACA,IAAAT,EAAAY,EAAAV,EAAAO,GAAA,CACA,IAAAI,EAAA,IAAAC,MAAA,uBAAAL,EAAA,KAEA,MADAI,EAAAE,KAAA,mBACAF,EAEA,OAAAX,EAAAO,GAEAD,EAAAQ,KAAA,WACA,OAAAC,OAAAD,KAAAd,IAEAM,EAAAU,QAAAP,EACAb,EAAAC,QAAAS,EACAA,EAAAE,GAAA,uBC1BAZ,EAAAC,QAAiBC,EAAAC,EAAuB,4DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,4DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kFCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,4MCgHzBkB,0LA1GP,OAAOC,EAAAC,EAAAC,cAAA,WACHF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASC,MACpB,CAACC,gBAAe,OAAAC,OAASC,EAAQ,IAAjB,OAEhBP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,mBAGRH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,8CACoCF,EAAAC,EAAAC,cAAA,WADpC,0BAE2BF,EAAAC,EAAAC,cAAA,WACvBF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAJJ,eAKgBF,EAAAC,EAAAC,cAAA,WACZF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAPJ,0BAQ2BF,EAAAC,EAAAC,cAAA,WAR3B,0BAS2BF,EAAAC,EAAAC,cAAA,WAT3B,0BAU2BF,EAAAC,EAAAC,cAAA,WACvBF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAZJ,0BAa2BF,EAAAC,EAAAC,cAAA,WAb3B,0BAc2BF,EAAAC,EAAAC,cAAA,WAd3B,0BAe2BF,EAAAC,EAAAC,cAAA,WAf3B,0BAgB2BF,EAAAC,EAAAC,cAAA,WAhB3B,0BAiB2BF,EAAAC,EAAAC,cAAA,WAjB3B,0BAkB2BF,EAAAC,EAAAC,cAAA,WAlB3B,0BAmB2BF,EAAAC,EAAAC,cAAA,WAnB3B,0BAoB2BF,EAAAC,EAAAC,cAAA,WACvBF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAtBJ,qBAuBsBF,EAAAC,EAAAC,cAAA,WAClBF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAzBJ,0BA0B2BF,EAAAC,EAAAC,cAAA,WA1B3B,0BA2B2BF,EAAAC,EAAAC,cAAA,WA3B3B,0BA4B2BF,EAAAC,EAAAC,cAAA,WA5B3B,0BA6B2BF,EAAAC,EAAAC,cAAA,WA7B3B,0BA8B2BF,EAAAC,EAAAC,cAAA,WA9B3B,0BA+B2BF,EAAAC,EAAAC,cAAA,WA/B3B,0BAgC2BF,EAAAC,EAAAC,cAAA,WAhC3B,0BAiC2BF,EAAAC,EAAAC,cAAA,WAjC3B,0BAkC2BF,EAAAC,EAAAC,cAAA,WAlC3B,0BAmC2BF,EAAAC,EAAAC,cAAA,WAnC3B,0BAoC2BF,EAAAC,EAAAC,cAAA,WApC3B,0BAqC2BF,EAAAC,EAAAC,cAAA,WArC3B,0BAsC2BF,EAAAC,EAAAC,cAAA,WAtC3B,0BAuC2BF,EAAAC,EAAAC,cAAA,WAvC3B,0BAwC2BF,EAAAC,EAAAC,cAAA,WAxC3B,0BAyC2BF,EAAAC,EAAAC,cAAA,WACvBF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WA9CJ,sBA+CuBF,EAAAC,EAAAC,cAAA,WACnBF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WApDJ,0BAqD2BF,EAAAC,EAAAC,cAAA,WArD3B,0BAsD2BF,EAAAC,EAAAC,cAAA,WAtD3B,0BAuD2BF,EAAAC,EAAAC,cAAA,WAvD3B,0BAwD2BF,EAAAC,EAAAC,cAAA,WAxD3B,0BAyD2BF,EAAAC,EAAAC,cAAA,WAzD3B,0BA0D2BF,EAAAC,EAAAC,cAAA,WA1D3B,0BA2D2BF,EAAAC,EAAAC,cAAA,WA3D3B,0BA4D2BF,EAAAC,EAAAC,cAAA,WA5D3B,0BA6D2BF,EAAAC,EAAAC,cAAA,WA7D3B,0BA8D2BF,EAAAC,EAAAC,cAAA,WA9D3B,0BA+D2BF,EAAAC,EAAAC,cAAA,WA/D3B,0BAgE2BF,EAAAC,EAAAC,cAAA,WAhE3B,0BAiE2BF,EAAAC,EAAAC,cAAA,WAjE3B,0BAkE2BF,EAAAC,EAAAC,cAAA,WAlE3B,0BAmE2BF,EAAAC,EAAAC,cAAA,WAnE3B,0BAoE2BF,EAAAC,EAAAC,cAAA,WApE3B,0BAqE2BF,EAAAC,EAAAC,cAAA,WArE3B,0BAsE2BF,EAAAC,EAAAC,cAAA,WAtE3B,0BAuE2BF,EAAAC,EAAAC,cAAA,WAvE3B,0BAwE2BF,EAAAC,EAAAC,cAAA,WAxE3B,0BAyE2BF,EAAAC,EAAAC,cAAA,WAzE3B,0BA0E2BF,EAAAC,EAAAC,cAAA,WA1E3B,0BA2E2BF,EAAAC,EAAAC,cAAA,WA3E3B,0BA4E2BF,EAAAC,EAAAC,cAAA,WA5E3B,0BA6E2BF,EAAAC,EAAAC,cAAA,WA7E3B,0BA8E2BF,EAAAC,EAAAC,cAAA,WA9E3B,0BA+E2BF,EAAAC,EAAAC,cAAA,WA/E3B,0BAgF2BF,EAAAC,EAAAC,cAAA,WAhF3B,0BAiF2BF,EAAAC,EAAAC,cAAA,WAjF3B,0BAkF2BF,EAAAC,EAAAC,cAAA,WAlF3B,0BAmF2BF,EAAAC,EAAAC,cAAA,WAnF3B,0BAoF2BF,EAAAC,EAAAC,cAAA,WApF3B,0BAqF2BF,EAAAC,EAAAC,cAAA,WArF3B,0BAsF2BF,EAAAC,EAAAC,cAAA,WAtF3B,0BAuF2BF,EAAAC,EAAAC,cAAA,WAvF3B,0BAwF2BF,EAAAC,EAAAC,cAAA,WAxF3B,2BAZGM,IAAMC,YCMVC,EAPE,WACb,OAAQV,EAAAC,EAAAC,cAAAF,EAAAC,EAAAU,SAAA,KACJX,EAAAC,EAAAC,cAAA,2DACAF,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMC,GAAG,KAAIb,EAAAC,EAAAC,cAAA,kCCMNY,SAPC,SAAAC,GAA+C,IAA7CC,EAA6CD,EAA7CC,MAAOC,EAAsCF,EAAtCE,SAAUC,EAA4BH,EAA5BG,SAAUC,EAAkBJ,EAAlBI,aACzC,OAAQnB,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMT,UAAU,UAAUU,GAAIG,EAAOI,QAASD,GAClDnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOkB,IAAKd,MAAQ,KAAAD,OAAmBW,EAApB,SAAqCK,IAAG,GAAAhB,OAAKY,EAAL,WAC1ElB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYe,MCyCpBK,qBA3CX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAA5B,OAAA6B,EAAA,EAAA7B,CAAA8B,KAAAJ,IACfE,EAAA5B,OAAA+B,EAAA,EAAA/B,CAAA8B,KAAA9B,OAAAgC,EAAA,EAAAhC,CAAA0B,GAAAO,KAAAH,KAAMH,KAeVO,aAAe,SAAAC,GACXP,EAAKQ,iBACLC,QAAQC,IAAR,cAAA7B,OAA0B0B,EAAMI,OAAOC,SAlBxBZ,EAqBnBQ,eAAiB,WACTK,OAAOC,aAAe,MAAQd,EAAKe,MAAMC,SACzChB,EAAKiB,SAAS,CACVD,UAAU,IAEPH,OAAOC,YAAc,KAAOd,EAAKe,MAAMC,UAC9ChB,EAAKiB,SAAS,CACVD,UAAU,KA1BlBhB,EAAKe,MAAQ,CACTC,UAAU,GAHChB,mFAQfE,KAAKM,iBACLK,OAAOK,iBAAiB,SAAUhB,KAAKI,6DAIvCO,OAAOM,oBAAoB,SAAUjB,KAAKI,+CAqB1C,OAAQ/B,EAAAC,EAAAC,cAAA,OAAKC,UAAS,UAAAG,OAAYqB,KAAKa,MAAMC,SAAW,SAAW,IAAMI,SAAUlB,KAAKI,cACpF/B,EAAAC,EAAAC,cAAC4C,EAAD,CAAS9B,MAAM,IAAIC,SAAS,WAAWC,SAAS,SAChDlB,EAAAC,EAAAC,cAAC4C,EAAD,CAAS9B,MAAM,YAAYC,SAAS,eAAeC,SAAS,aAC5DlB,EAAAC,EAAAC,cAAC4C,EAAD,CAAS9B,MAAM,WAAWC,SAAS,cAAcC,SAAS,aAC1DlB,EAAAC,EAAAC,cAAC4C,EAAD,CAAS9B,MAAM,WAAWC,SAAS,cAAcC,SAAS,oBAvCjDV,IAAMC,YCeZsC,EAlBE,WACb,OAAQ/C,EAAAC,EAAAC,cAAA,WACJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASC,MACpB,CAACC,gBAAe,OAAAC,OAASC,EAAQ,IAAjB,OAEhBP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,uBAGRH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,mDCgBG8C,0LAjBX,OACIhD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,KACEjD,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWrD,IACjCC,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAOE,KAAK,YAAYC,UAAWL,IACnC/C,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAOE,KAAK,aAAaC,UAAW1C,IACpCV,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAOE,KAAK,SAASE,OAAQ,kBAAMrD,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAUpC,GAAG,oBAGpDb,EAAAC,EAAAC,cAACoD,EAAD,cAZQ9C,IAAMC,YCEJ8C,QACW,cAA7BjB,OAAOkB,SAASC,UAEe,UAA7BnB,OAAOkB,SAASC,UAEhBnB,OAAOkB,SAASC,SAASC,MACvB,2DCXNC,IAASN,OAAOrD,EAAAC,EAAAC,cAACU,EAAA,EAAD,KAAQZ,EAAAC,EAAAC,cAAC0D,EAAD,OAAkBC,SAASC,eAAe,SD0H5D,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.299dba5e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/backgroundhome.ca9ac795.jpg\";","var map = {\n\t\"./aboutmeicon.svg\": 40,\n\t\"./contacticon.svg\": 41,\n\t\"./homeicon.svg\": 42,\n\t\"./menuicon.svg\": 43,\n\t\"./projectsicon.svg\": 44\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 39;","module.exports = __webpack_public_path__ + \"static/media/aboutmeicon.d9fb9546.svg\";","module.exports = __webpack_public_path__ + \"static/media/contacticon.a613092c.svg\";","module.exports = __webpack_public_path__ + \"static/media/homeicon.56c67139.svg\";","module.exports = __webpack_public_path__ + \"static/media/menuicon.f4747b89.svg\";","module.exports = __webpack_public_path__ + \"static/media/projectsicon.32b05299.svg\";","module.exports = __webpack_public_path__ + \"static/media/backgroundprojects.7459bc3a.jpg\";","import React from 'react';\r\n\r\nimport './Home.css';\r\n\r\nclass Home extends React.Component {\r\n    render() {\r\n        return(<div>\r\n            <div className='TopBar' style={\r\n                {backgroundImage: `url(${require(`./common/images/backgroundhome.jpg`)})`}\r\n            }>\r\n                <div className='TopBarOverlay'>\r\n                    <h1 className='PageTitle'>The Home Page</h1>\r\n                </div>\r\n            </div>\r\n            <div className='Content'>\r\n                <h1>Home:</h1>\r\n                <div>\r\n                    This is the home, blah blah home<br/>\r\n                    content content content<br/>\r\n                    <br/>\r\n                    <br/>\r\n                    more content<br/>\r\n                    <br/>\r\n                    <br/>\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    <br/>\r\n                    <br/>\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    <br/>\r\n                    <br/>\r\n                    a lot more content<br/>\r\n                    <br/>\r\n                    <br/>\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    it just keeps going<br />\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    content content content<br/>\r\n                    end of content\r\n                </div>\r\n            </div>\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NotFound = () => {\r\n    return (<>\r\n        <h1>Ooops, it looks like this page doesn't exist!</h1>\r\n        <Link to='/'><h1>Back to homepage!</h1></Link>\r\n    </>);\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './NavLink.css';\r\n\r\nconst NavLink = ({route, iconName, linkName, clickHandler}) => {\r\n    return (<Link className='NavLink' to={route} onClick={clickHandler}>\r\n        <img className='icon' src={require(`./common/images/${iconName}.svg`)} alt={`${linkName} icon`} />\r\n        <div className='linkName'>{linkName}</div>\r\n    </Link>);\r\n}\r\n\r\nexport default NavLink;","import React from 'react';\r\nimport NavLink from './NavLink';\r\n\r\nimport './NavBar.css';\r\n\r\nclass NavBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            stickied: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateStickied();\r\n        window.addEventListener('scroll', this.handleScroll)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.handleScroll)\r\n    }\r\n\r\n    handleScroll = event => {\r\n        this.updateStickied();\r\n        console.log(`scrolling: ${event.target.value}`);\r\n    }\r\n\r\n    updateStickied = () => {\r\n        if (window.pageYOffset >= 200 && !this.state.stickied) {\r\n            this.setState({\r\n                stickied: true\r\n            });\r\n        } else if (window.pageYOffset < 200 && this.state.stickied) {\r\n            this.setState({\r\n                stickied: false\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (<div className={`NavBar ${this.state.stickied ? 'sticky' : ''}`} onScroll={this.handleScroll}>\r\n            <NavLink route='/' iconName='homeicon' linkName='Home' />\r\n            <NavLink route='/Projects' iconName='projectsicon' linkName='Projects' />\r\n            <NavLink route='/AboutMe' iconName='aboutmeicon' linkName='About Me' />\r\n            <NavLink route='/Contact' iconName='contacticon' linkName='Contact' />\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\n\r\nconst Projects = () => {\r\n    return (<div>\r\n        <div className='TopBar' style={\r\n            {backgroundImage: `url(${require(`./common/images/backgroundprojects.jpg`)})`}\r\n        }>\r\n            <div className='TopBarOverlay'>\r\n                <h1 className='PageTitle'>The Projects Page</h1>\r\n            </div>\r\n        </div>\r\n        <div className='Content'>\r\n            <h1>Projects:</h1>\r\n            <div>\r\n                Blah blah projects blah blah blah\r\n            </div>\r\n        </div>\r\n    </div>);\r\n}\r\n\r\nexport default Projects;","import React from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\n\r\nimport Home from './Home';\r\nimport NotFound from './NotFound';\r\nimport NavBar from './NavBar';\r\nimport Projects from './Projects';\r\n\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n        <div className='App'>\r\n          <div className='NavigableContent'>\r\n            <Switch>\r\n              <Route exact path='/' component={Home} />\r\n              <Route path='/Projects' component={Projects} />\r\n              <Route path='/not-found' component={NotFound} />\r\n              <Route path='/:path' render={() => <Redirect to='/not-found'/>} />\r\n            </Switch>\r\n          </div>\r\n          <NavBar />\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './frontend/App';\r\nimport * as serviceWorker from './frontend/serviceWorker';\r\n\r\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}